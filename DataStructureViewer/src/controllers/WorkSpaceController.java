package controllers;

import javafx.geometry.Point2D;
import javafx.scene.input.DragEvent;
import javafx.scene.input.TransferMode;
import models.LinkedListElement;
import models.WorkSpaceGraph;
import models.WorkSpaceGraphElement;
import views.WorkSpaceView;

/**
 * A class which handles events generated by input to a WorkSpaceView, interprets
 * them and delivers the interpreted WorkSpaceGraph model.
 * @author Iain Workman
 */
public class WorkSpaceController {
    
    // Constructor
    /**
     * Creates an instance of a WorkSpaceController which interprets the input
     * from the provided WorkSpaceView, and passes the instructions to the
     * provided WorkSpaceGraph
     * @param model::WorkSpaceGraph ~ The model to send the instructions to
     * @param view::WorkSpaceView ~ The view which will receive the input
     */
    public WorkSpaceController(WorkSpaceGraph model, WorkSpaceView view) {
        model_ = model;
        view_ = view;
        
        // An item being dropped on the view from the toolbar
        view.setOnDragDropped((DragEvent event) -> {
            String dragData = event.getDragboard().getString();
            
            WorkSpaceGraphElement elementToAdd = null;
            switch (dragData) {
                case "Linked List":
                    Point2D relativePosition = view_.getRelativePosition(event.getX(),event.getY());
                    elementToAdd = new LinkedListElement(relativePosition, model_);
                    break;
                case "Linked List Node":
                    break;
                case "Array":
                    break;
            }
            
            if(elementToAdd != null) {
                model_.addElement(elementToAdd);
            }
                
        });
        
        // A dragged item entering the view
        view.setOnDragOver((DragEvent event) -> {
            event.acceptTransferModes(TransferMode.COPY);
            
            event.consume();
        });
    }
    
    // Private Member Variables
    private final WorkSpaceGraph model_;
    private final WorkSpaceView view_;
}
