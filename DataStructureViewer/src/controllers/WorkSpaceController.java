package controllers;

import javafx.scene.input.DragEvent;
import javafx.scene.input.TransferMode;
import models.WorkSpaceGraph;
import views.WorkSpaceView;

/**
 * A class which handles events generated by input to a WorkSpaceView, interprets
 * them and delivers the interpreted WorkSpaceGraph model.
 * @author Iain Workman
 */
public class WorkSpaceController {
    
    // Constructor
    /**
     * Creates an instance of a WorkSpaceController which interprets the input
     * from the provided WorkSpaceView, and passes the instructions to the
     * provided WorkSpaceGraph
     * @param model::WorkSpaceGraph ~ The model to send the instructions to
     * @param view::WorkSpaceView ~ The view which will receive the input
     */
    public WorkSpaceController(WorkSpaceGraph model, WorkSpaceView view) {
        model_ = model;
        
        // An item being dropped on the view from the toolbar
        view.setOnDragDropped((DragEvent event) -> {
            // TODO: Signal to the model that an element of the type specified
            // by the contained string should be added
            System.out.println("Item of type " 
                    + event.getDragboard().getString() 
                    + " should be added at (" 
                    + event.getX() 
                    + ", "
                    + event.getY()
                    + ")");
        });
        
        // An dragged item entering the view
        view.setOnDragOver((DragEvent event) -> {
            event.acceptTransferModes(TransferMode.COPY);
            
            event.consume();
        });
    }
    
    // Private Member Variables
    private final WorkSpaceGraph model_;
}
